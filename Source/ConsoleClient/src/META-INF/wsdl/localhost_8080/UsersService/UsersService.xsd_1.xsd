<?xml version='1.0' encoding='UTF-8'?><!-- Published by JAX-WS RI (http://jax-ws.java.net). RI's version is Metro/2.3.2-b608 (trunk-7979; 2015-01-21T12:50:19+0000) JAXWS-RI/2.2.11-b150120.1832 JAXWS-API/2.2.12 JAXB-RI/2.2.12-b141219.1637 JAXB-API/2.2.13-b141020.1521 svn-revision#unknown. --><xs:schema xmlns:tns="http://services/" xmlns:xs="http://www.w3.org/2001/XMLSchema" version="1.0" targetNamespace="http://services/">

<xs:element name="convertToReviewer" type="tns:convertToReviewer"/>

<xs:element name="convertToReviewerResponse" type="tns:convertToReviewerResponse"/>

<xs:element name="count" type="tns:count"/>

<xs:element name="countResponse" type="tns:countResponse"/>

<xs:element name="create" type="tns:create"/>

<xs:element name="edit" type="tns:edit"/>

<xs:element name="find" type="tns:find"/>

<xs:element name="findAll" type="tns:findAll"/>

<xs:element name="findAllResponse" type="tns:findAllResponse"/>

<xs:element name="findRange" type="tns:findRange"/>

<xs:element name="findRangeResponse" type="tns:findRangeResponse"/>

<xs:element name="findResponse" type="tns:findResponse"/>

<xs:element name="findUserByEmail" type="tns:findUserByEmail"/>

<xs:element name="findUserByEmailResponse" type="tns:findUserByEmailResponse"/>

<xs:element name="findUsersByEmails" type="tns:findUsersByEmails"/>

<xs:element name="findUsersByEmailsResponse" type="tns:findUsersByEmailsResponse"/>

<xs:element name="findUsersByRole" type="tns:findUsersByRole"/>

<xs:element name="findUsersByRoleResponse" type="tns:findUsersByRoleResponse"/>

<xs:element name="remove" type="tns:remove"/>

<xs:element name="users" type="tns:users"/>

<xs:complexType name="find">
<xs:sequence>
<xs:element name="id" type="xs:anyType" minOccurs="0"/>
</xs:sequence>
</xs:complexType>

<xs:complexType name="findResponse">
<xs:sequence>
<xs:element name="return" type="tns:users" minOccurs="0"/>
</xs:sequence>
</xs:complexType>

<xs:complexType name="users">
<xs:sequence>
<xs:element name="birthdate" type="xs:dateTime" minOccurs="0"/>
<xs:element name="email" type="xs:string" minOccurs="0"/>
<xs:element name="id" type="xs:int" minOccurs="0"/>
<xs:element name="name" type="xs:string" minOccurs="0"/>
<xs:element name="password" type="xs:string" minOccurs="0"/>
<xs:element name="role" type="xs:string" minOccurs="0"/>
</xs:sequence>
</xs:complexType>

<xs:complexType name="findRange">
<xs:sequence>
<xs:element name="range" type="xs:int" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
</xs:sequence>
</xs:complexType>

<xs:complexType name="findRangeResponse">
<xs:sequence>
<xs:element name="return" type="tns:users" minOccurs="0" maxOccurs="unbounded"/>
</xs:sequence>
</xs:complexType>

<xs:complexType name="edit">
<xs:sequence>
<xs:element name="entity" type="tns:users" minOccurs="0"/>
</xs:sequence>
</xs:complexType>

<xs:complexType name="create">
<xs:sequence>
<xs:element name="entity" type="tns:users" minOccurs="0"/>
</xs:sequence>
</xs:complexType>

<xs:complexType name="count">
<xs:sequence/>
</xs:complexType>

<xs:complexType name="countResponse">
<xs:sequence>
<xs:element name="return" type="xs:int"/>
</xs:sequence>
</xs:complexType>

<xs:complexType name="findUsersByRole">
<xs:sequence>
<xs:element name="role" type="xs:string" minOccurs="0"/>
</xs:sequence>
</xs:complexType>

<xs:complexType name="findUsersByRoleResponse">
<xs:sequence>
<xs:element name="return" type="tns:users" minOccurs="0" maxOccurs="unbounded"/>
</xs:sequence>
</xs:complexType>

<xs:complexType name="remove">
<xs:sequence>
<xs:element name="entity" type="tns:users" minOccurs="0"/>
</xs:sequence>
</xs:complexType>

<xs:complexType name="findUsersByEmails">
<xs:sequence>
<xs:element name="emails" type="xs:string" minOccurs="0" maxOccurs="unbounded"/>
</xs:sequence>
</xs:complexType>

<xs:complexType name="findUsersByEmailsResponse">
<xs:sequence>
<xs:element name="return" type="tns:users" minOccurs="0" maxOccurs="unbounded"/>
</xs:sequence>
</xs:complexType>

<xs:complexType name="findAll">
<xs:sequence/>
</xs:complexType>

<xs:complexType name="findAllResponse">
<xs:sequence>
<xs:element name="return" type="tns:users" minOccurs="0" maxOccurs="unbounded"/>
</xs:sequence>
</xs:complexType>

<xs:complexType name="convertToReviewer">
<xs:sequence>
<xs:element name="entity" type="tns:users" minOccurs="0"/>
</xs:sequence>
</xs:complexType>

<xs:complexType name="convertToReviewerResponse">
<xs:sequence>
<xs:element name="return" type="tns:users" minOccurs="0"/>
</xs:sequence>
</xs:complexType>

<xs:complexType name="findUserByEmail">
<xs:sequence>
<xs:element name="email" type="xs:string" minOccurs="0"/>
</xs:sequence>
</xs:complexType>

<xs:complexType name="findUserByEmailResponse">
<xs:sequence>
<xs:element name="return" type="tns:users" minOccurs="0"/>
</xs:sequence>
</xs:complexType>
</xs:schema>