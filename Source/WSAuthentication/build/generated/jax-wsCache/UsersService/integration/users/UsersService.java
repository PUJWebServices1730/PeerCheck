
package integration.users;

import java.util.List;
import javax.jws.Oneway;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.11-b150120.1832
 * Generated source version: 2.2
 * 
 */
@WebService(name = "UsersService", targetNamespace = "http://services/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface UsersService {


    /**
     * 
     * @param entity
     */
    @WebMethod
    @Oneway
    @RequestWrapper(localName = "remove", targetNamespace = "http://services/", className = "integration.users.Remove")
    @Action(input = "http://services/UsersService/remove")
    public void remove(
        @WebParam(name = "entity", targetNamespace = "")
        Users entity);

    /**
     * 
     * @return
     *     returns int
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "count", targetNamespace = "http://services/", className = "integration.users.Count")
    @ResponseWrapper(localName = "countResponse", targetNamespace = "http://services/", className = "integration.users.CountResponse")
    @Action(input = "http://services/UsersService/countRequest", output = "http://services/UsersService/countResponse")
    public int count();

    /**
     * 
     * @param id
     * @return
     *     returns integration.users.Users
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "find", targetNamespace = "http://services/", className = "integration.users.Find")
    @ResponseWrapper(localName = "findResponse", targetNamespace = "http://services/", className = "integration.users.FindResponse")
    @Action(input = "http://services/UsersService/findRequest", output = "http://services/UsersService/findResponse")
    public Users find(
        @WebParam(name = "id", targetNamespace = "")
        Object id);

    /**
     * 
     * @param entity
     */
    @WebMethod
    @Oneway
    @RequestWrapper(localName = "create", targetNamespace = "http://services/", className = "integration.users.Create")
    @Action(input = "http://services/UsersService/create")
    public void create(
        @WebParam(name = "entity", targetNamespace = "")
        Users entity);

    /**
     * 
     * @return
     *     returns java.util.List<integration.users.Users>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "findAll", targetNamespace = "http://services/", className = "integration.users.FindAll")
    @ResponseWrapper(localName = "findAllResponse", targetNamespace = "http://services/", className = "integration.users.FindAllResponse")
    @Action(input = "http://services/UsersService/findAllRequest", output = "http://services/UsersService/findAllResponse")
    public List<Users> findAll();

    /**
     * 
     * @param emails
     * @return
     *     returns java.util.List<integration.users.Users>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "findUsersByEmails", targetNamespace = "http://services/", className = "integration.users.FindUsersByEmails")
    @ResponseWrapper(localName = "findUsersByEmailsResponse", targetNamespace = "http://services/", className = "integration.users.FindUsersByEmailsResponse")
    @Action(input = "http://services/UsersService/findUsersByEmailsRequest", output = "http://services/UsersService/findUsersByEmailsResponse")
    public List<Users> findUsersByEmails(
        @WebParam(name = "emails", targetNamespace = "")
        List<String> emails);

    /**
     * 
     * @param id
     * @return
     *     returns integration.users.Users
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "convertToReviewer", targetNamespace = "http://services/", className = "integration.users.ConvertToReviewer")
    @ResponseWrapper(localName = "convertToReviewerResponse", targetNamespace = "http://services/", className = "integration.users.ConvertToReviewerResponse")
    @Action(input = "http://services/UsersService/convertToReviewerRequest", output = "http://services/UsersService/convertToReviewerResponse")
    public Users convertToReviewer(
        @WebParam(name = "id", targetNamespace = "")
        Object id);

    /**
     * 
     * @param entity
     */
    @WebMethod
    @Oneway
    @RequestWrapper(localName = "edit", targetNamespace = "http://services/", className = "integration.users.Edit")
    @Action(input = "http://services/UsersService/edit")
    public void edit(
        @WebParam(name = "entity", targetNamespace = "")
        Users entity);

    /**
     * 
     * @param range
     * @return
     *     returns java.util.List<integration.users.Users>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "findRange", targetNamespace = "http://services/", className = "integration.users.FindRange")
    @ResponseWrapper(localName = "findRangeResponse", targetNamespace = "http://services/", className = "integration.users.FindRangeResponse")
    @Action(input = "http://services/UsersService/findRangeRequest", output = "http://services/UsersService/findRangeResponse")
    public List<Users> findRange(
        @WebParam(name = "range", targetNamespace = "")
        List<Integer> range);

    /**
     * 
     * @param email
     * @return
     *     returns integration.users.Users
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "findUserByEmail", targetNamespace = "http://services/", className = "integration.users.FindUserByEmail")
    @ResponseWrapper(localName = "findUserByEmailResponse", targetNamespace = "http://services/", className = "integration.users.FindUserByEmailResponse")
    @Action(input = "http://services/UsersService/findUserByEmailRequest", output = "http://services/UsersService/findUserByEmailResponse")
    public Users findUserByEmail(
        @WebParam(name = "email", targetNamespace = "")
        String email);

}
